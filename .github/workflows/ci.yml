name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  # pre-commit:
  #   name: Lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: '3.11'
  #     - uses: pre-commit/action@v3.0.1
  unit:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install '.[dev,analysis]'

      - name: Run tests
        run: |
          python -m pytest --cov=sc2ts tests/
      # - name: Upload coverage to Coveralls
      #   uses: coverallsapp/github-action@v2.3.0
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     # The first coveralls upload will succeed and others seem to fail now.
      #     # This is a quick workaround for doing a proper "parallel" setup:
      #     # https://github.com/coverallsapp/github-action
      #     fail-on-error: false

  end_to_end:
    name: End to end tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install '.[dev,analysis]'

      - name: Create basedir and copy data
        run: |
          mkdir -p testrun
          cp -R tests/data testrun/data
          gunzip testrun/data/alignments.fasta.gz

      - name: Import alignments
        run: |
          sc2ts import-alignments -i testrun/dataset.zarr testrun/data/alignments.fasta

      - name: Import metadata
        run: |
          sc2ts import-metadata testrun/dataset.zarr testrun/data/metadata.tsv

      - name: Info dataset
        run: |
          sc2ts info-dataset testrun/dataset.zarr

      - name: Run inference
        run: |
          # doing 10 days here as this is taking a while
          last_ts=testrun/initial.ts
          sc2ts initialise -v $last_ts testrun/match.db
          for date in `sc2ts list-dates testrun/dataset.zarr | head -n 10`; do
              out_ts=testrun/$date.ts
              sc2ts extend $last_ts $date \
                  testrun/dataset.zarr \
                  testrun/match.db $out_ts -v --min-group-size=2
              last_ts=$out_ts
          done

      - name: Validate
        run: |
          sc2ts validate -v testrun/dataset.zarr testrun/2020-02-02.ts

      - name: Info
        run: |
          sc2ts info-ts testrun/2020-02-02.ts

      - name: MatchDB
        run: |
          sc2ts info-matches testrun/match.db

  packaging:
    name: Packaging tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine validate-pyproject[all]
      - name: Check and install package
        run: |
          validate-pyproject pyproject.toml
          python -m build
          python -m twine check --strict dist/*
          python -m pip install dist/*.whl
